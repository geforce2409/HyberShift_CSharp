<fluentWpf:AcrylicWindow x:Class="HyberShift_CSharp.View.MainWindow"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         xmlns:local="clr-namespace:HyberShift_CSharp"
                         xmlns:viewmodel="clr-namespace:HyberShift_CSharp.ViewModel"
                         xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                         xmlns:system="clr-namespace:System;assembly=mscorlib"
                         mc:Ignorable="d"
                         Title="MainWindow" Height="584" Width="720"
                         WindowStartupLocation="CenterScreen"
                         TintColor="#10FFFFFF"
                         TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                         TextElement.FontWeight="Regular"
                         TextElement.FontSize="12"
                         TextOptions.TextFormattingMode="Ideal"
                         TextOptions.TextRenderingMode="Auto"
                         FontFamily="{DynamicResource MaterialDesignFont}"
                         SnapsToDevicePixels="True">
    <fluentWpf:AcrylicWindow.Resources>
        <viewmodel:MainViewModel x:Key="MainViewModel" />

        <!--Hamburger Menu Animations-->
        <!--<system:Double x:Key="CollasedMenu">50</system:Double>
        <system:Double x:Key="ExpandedMenu">200</system:Double>

        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource CollasedMenu}"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="{StaticResource ExpandedMenu}"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ExpandedMenu}"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="{StaticResource CollasedMenu}"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>-->
    </fluentWpf:AcrylicWindow.Resources>

    <!--Hamburger Menu-->
    <!--<Grid Background="#42AAAAAA">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="GridMenu" Width="{StaticResource CollasedMenu}"
              Column="0" VerticalAlignment="Top"
              fluentWpf:PointerTracker.Enabled="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ToggleButton x:Name="ButtonMenu"
                          Style="{DynamicResource MaterialDesignHamburgerToggleButton}"
                          HorizontalAlignment="Left" Width="30" Height="30"
                          Click="ButtonMenu_OnClick" Margin="9,9,0,0"/>
        </Grid>

        <Grid Column="1" Background="Black"></Grid>
        <Grid Column="2" Background="#FFE2E2E2"></Grid>
    </Grid>-->

    <Grid Background="#42AAAAAA">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--Left Panel-->
        <!--Example in Material Design - List-->
        <!--<ItemsControl
            ItemsSource="{Binding Items2}" Grid.IsSharedSizeScope="True">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type domain:SelectableViewModel}">
                    <Border x:Name="Border" Padding="8" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource MaterialDesignDivider}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="Checkerz" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ToggleButton VerticalAlignment="Center" IsChecked="{Binding IsSelected}"
                                          Style="{StaticResource MaterialDesignActionLightToggleButton}"
                                          Content="{Binding Code}" />
                            <StackPanel Margin="8 0 0 0" Grid.Column="1">
                                <TextBlock FontWeight="Bold" Text="{Binding Name}" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>-->

        <!--Right Panel-->
        <Grid Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>



        </Grid>
    </Grid>
</fluentWpf:AcrylicWindow>